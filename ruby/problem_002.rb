#!/usr/bin/env ruby

=begin problem 002
  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    serialhex
=end

@fib = [1,1]
def fib(n)
  return 1 if (n <= 1)
  @fib[n] ||= fib(n-1) + fib(n-2)
end

# get all of the fibonacci numbers that are < 4 million
num = 0
top = 4 * 10**6 # four million
loop do
  num += 1
  break if fib(num) >= top
end

@fib.pop
puts @fib

ans = @fib.inject(0) do |sum, n|
  n.even? ? sum + n : sum
end

puts ans